version: 2.1

orbs:
  win: circleci/windows@5.0 
  macos: circleci/macos@2.4.1

jobs:   
  build_linux_x86_64: 
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps: 
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - v4-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
            rm ~/.gitconfig
      - run: 
          name: Install Dependencies
          command: |
            sudo apt update
            sudo NEEDRESTART_MODE=a apt install -y yasm ffmpeg libudev-dev libevdev-dev libhidapi-dev libpipewire-0.3-dev libpipewire-0.3-modules libpipewire-0.3-0 x264 libx264-dev libclang-dev clang llvm-dev libasound2-dev libxrandr-dev libxcb-randr0-dev libxdo-dev libxcb-shm0-dev
      - run:
          name: Build Server
          command: |
            cd mrial_server
            cargo build --release
      - run:
          name: Build Player
          command: |
            cd mrial_player
            cargo build --release
      - run: 
          name: Package
          command: |
            mkdir dist
            mkdir -p mrial_x86_64/bin
            cp target/release/mrial_player mrial_x86_64/bin/
            cp target/release/mrial_server mrial_x86_64/bin/
            zip -r mrial_x86_64.zip mrial_x86_64
            mv mrial_x86_64.zip dist/
      - persist_to_workspace:
          root: ./dist
          paths:
            - ./
      - save_cache:
          paths:
            - ~/.cargo/
            - target
          key: v4-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  build_linux_arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.large
    steps: 
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - v4-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
            rm ~/.gitconfig
      - run: 
          name: Install Dependencies
          command: |
            sudo apt update
            sudo apt install -y ffmpeg libudev-dev libevdev-dev libhidapi-dev libpipewire-0.3-dev libpipewire-0.3-modules libpipewire-0.3-0 x264 libx264-dev libclang-dev clang llvm-dev libasound2-dev libxrandr-dev libxcb-randr0-dev libxdo-dev
      - run:
          name: Build Server
          command: |
            cd mrial_server
            cargo build --release
      - run:
          name: Build Player
          command: |
            cd mrial_player
            cargo build --release
      - run: 
          name: Package
          command: |
            mkdir dist
            mkdir -p mrial_arm64/bin
            cp target/release/mrial_player mrial_arm64/bin/
            cp target/release/mrial_server mrial_arm64/bin/
            zip -r mrial_arm64.zip mrial_arm64
            mv mrial_arm64.zip dist/
      - persist_to_workspace:
          root: ./dist
          paths:
            - ./
      - save_cache:
          paths:
            - ~/.cargo/
            - target
          key: v4-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  build_macos: 
    macos: 
      xcode: 15.1.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps: 
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - v5-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
            rm ~/.gitconfig
      - run: 
          name: Install Dependencies
          command: |
            brew install yasm ffmpeg x264 cmake create-dmg
      - run: 
          name: Build Player
          command: | 
            cd mrial_player
            cargo build --release
      - run :
          name: Build Server
          command: |
            cd mrial_server
            cargo build --release
      - macos/add-permission:
          bundle-id: com.apple.Terminal
          permission-type: kTCCServiceAppleEvents
      - macos/add-permission:
          bundle-id: com.apple.Finder
          permission-type: kTCCServiceAppleEvents
      - run: 
          name: Package
          command: |
            mkdir -p dist
            macos/scripts/build.sh
            mkdir -p mrial_macos/bin
            cp target/release/mrial_player mrial_macos/bin/
            cp target/release/mrial_server mrial_macos/bin/
            zip -r mrial_macos.zip mrial_macos
            mv mrial_macos.zip dist/
      - persist_to_workspace:
          root: ./dist
          paths:
            - ./*.zip
            - ./*.dmg
      - save_cache:
          paths:
            - ~/.cargo/
            - target
            - ~/Library/Caches/Homebrew/
            - ~/Library/Caches/Homebrew/downloads/
          key: v5-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  build_win:
    executor: 
      name: win/default 
      size: large
    environment:
      FFMPEG_DOWNLOAD_URL: "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
            rm ~/.gitconfig
      - run: 
          name: Install Dependencies
          command: |
            $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
            New-Item $Profile.CurrentUserAllHosts -Force  
            SETX LIBCLANG_PATH "${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
            Invoke-WebRequest "${env:FFMPEG_DOWNLOAD_URL}" -OutFile ffmpeg-release-full-shared.7z
            7z x ffmpeg-release-full-shared.7z
            mkdir ffmpeg
            mv ffmpeg-*/* ffmpeg/
            SETX FFMPEG_DIR "${pwd}\ffmpeg`n"
            Add-Content -Path $Profile.CurrentUserAllHosts -Value '$env:PATH = "${pwd}\ffmpeg\bin;$env:PATH"'
      - run: 
          name: Build 
          command: | 
            cd mrial_player
            cargo build --release
      - run: 
          name: Package
          command: |
            mkdir dist
            mkdir -p mrial_win/bin
            cp target/release/mrial_player.exe mrial_win/bin/
            zip -r mrial_win.zip mrial_win
            mv mrial_win.zip dist/
      - persist_to_workspace:
          root: ./dist
          paths:
            - ./
      - save_cache:
          paths:
            - target
          key: v3-cargo-mrial-player-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

  publish_github_release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./dist
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./dist/
workflows:
  build_and_release: 
    jobs: 
      - build_linux_x86_64:
          filters:
            tags:
              only:
                - /v.*/
            branches:
              only: 
                - master
      - build_linux_arm64:
          filters:
            tags:
              only:
                - /v.*/
            branches:
              only: 
                - master
      - build_macos:
          filters:
            tags:
              only:
                - /v.*/
            branches:
              only: 
                - master
      # - build_win:
      #     filters:
      #       tags:
      #         only:
      #           - /v.*/
      #       branches:
      #         only: 
      #           - master
      - publish_github_release:
          filters:
            tags:
              only:
                - /v.*/
            branches:
              ignore: /.*/
          context: mrial_gh
          requires: 
            - build_linux_arm64
            - build_linux_x86_64
            - build_macos
          # - build_win
