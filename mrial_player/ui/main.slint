import "../assets/fonts/Inknut_Antiqua/InknutAntiqua-Bold.ttf";

import { VerticalBox, Button } from "std-widgets.slint";
import { VideoScreen, VideoFunctions } from "screens/video.slint";
import { ControlPanelAdapter, ControlPanelFunctions } from "components/control_panel.slint";
import { LoginScreen } from "screens/login.slint";
import { HomeScreen, HomePageAdapter } from "screens/home.slint";
import { CreateServerFunctions } from "screens/create_server.slint";
import { IServer, ServerFunctions } from "components/server.slint";
import { GlobalVars } from "common.slint";

export { GlobalVars }
export { 
    VideoFunctions, 
    ServerFunctions, 
    CreateServerFunctions,
    ControlPanelFunctions
}
export { 
    HomePageAdapter,
    ControlPanelAdapter
}

export component MainWindow inherits Window {
    in-out property <int> page: 0;
    in-out property <image> video-frame;

    min-width: 725px;
    min-height: 500px;

    title: GlobalVars.app_name;
    padding: 0;

    forward-focus: key-handler;

    LoginScreen {
        window-height: parent.height;
        set_current_subpage(page) => { root.page = page }
        back => { root.page = 0 }
        x: (0 - root.page) * (parent.width + parent.x + 2px);
        // visible: root.page == 0;
        animate x { duration: 500ms; easing: ease-in-out; }
    }

    HomeScreen {
        back => { root.page = 0 }
        set_current_subpage(page) => { root.page = page }
        x: (1 - root.page) * (parent.width + parent.x + 2px);
        // visible: root.page == 1;
        // opacity: root.page == 0 ? 0 : 1;
        animate x { duration: 500ms; easing: ease-in-out; }
    }

    VideoScreen {
        video-frame: root.video-frame;
        key-handler := FocusScope {
            key-pressed(event) => {
                VideoFunctions.key_pressed(event);
                accept
            }
            key-released(event) => {
                VideoFunctions.key-released(event);
                accept
            }
        }

        set_current_subpage(page) => { root.page = page }
        back => { root.page = 0 }
        x: (2 - root.page) * (parent.width + parent.x + 2px);
        // visible: root.page == 2;
        animate x { duration: 500ms; easing: ease-in-out; }
    }
}